
question_list = ["What is __init__() in Python?\n",
                 "What is monkey patching in Python?\n",
                 "Why use else in try/except construct in Python?\n",
                 "What are decorators in Python?\n",
                 "What are context managers in Python and how are they implemented? \n",
                 "What is Python?\n",
                 "What are some key features of Python?\n",
                 "What is a Python decorator?\n",
                 "What are Python's built-in data types?\n",
                 "What is a list comprehension in Python?\n",
                 "Explain the difference between a list and a tuple in Python.\n ",
                 "What is the difference between append() and extend() in Python?\n",
                 "What is a lambda function in Python?\n",
                 "What is the difference between == and is in Python?\n",
                 "How does error handling work in Python?\n",
                 "What are Python's built-in types for sets and dictionaries?\n",
                 "What is the purpose of the self keyword in Python class methods?\n",
                 "What is the Global Interpreter Lock (GIL) in Python?\n",
                 "What is a generator in Python?\n",
                 "What are the differences between Python 2 and Python 3?\n"
                 ]

answer_list = ["The __init__() method is known as a constructor in object-oriented programming (OOP) terminology. It is used to initialize an object's state when it is created. This method is automatically called when a new instance of a class is instantiated",
               "Monkey patching in Python is a dynamic technique that can change the behavior of the code at run-time. In short, you can modify a class or module at run-time.",
               "`try:` and `except:` are commonly known for exceptional handling in Python, so where does `else:`come in handy? `else:` will be triggered when no exception is raised. ",
               "Decorators in Python are a design pattern that allows you to add new functionality to an existing object without modifying its structure. They are commonly used to extend the behavior of functions or methods.",
               "Context managers in Python are used to manage resources, ensuring that they are properly acquired and released. The most common use of context managers is the with statement.",
               "Python is a high-level, interpreted programming language known for its simplicity and readability. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming.",
               "Easy to read and write, Interpreted language, Dynamically typed, Extensive standard library, Supports multiple programming paradigms,Has a large and active community",
               "A decorator is a function that takes another function and extends its behavior without explicitly modifying it. Decorators are often used for logging, access control, and memoization.",
               "Some built-in data types include int, float, str, list, tuple, set, dict, and bool. ",
               "A list comprehension is a concise way to create lists. It consists of brackets containing an expression followed by a for clause, and optionally, more for or if clauses.",
               "Lists are mutable, meaning their elements can be changed, whereas tuples are immutable, meaning once they are created, their elements cannot be changed. ",
               "append() adds its argument as a single element to the end of a list. The length of the list itself will increase by one. extend() iterates over its argument adding each element to the list, extending the list.",
               "A lambda function is a small anonymous function defined with the lambda keyword. Lambda functions can have any number of arguments but only one expression. ",
               " == checks if the values of two operands are equal. is checks if the operands refer to the same object in memory.",
               "Python uses try, except, finally, and else blocks to handle errors and exceptions.",
               "set for unordered collections of unique elements. dict for key-value pairs.",
               "self represents the instance of the class. It's used to access variables and methods associated with the instance.\n",
               "The GIL is a mutex that protects access to Python objects, preventing multiple threads from executing Python bytecode at once. This can be a limitation for CPU-bound multi-threaded programs.",
               "A generator is a function that returns an iterator that yields items one at a time using the yield statement. Generators are a simple way to create iterators without the overhead of creating a class and implementing the __iter__ and __next__ methods.",
               "Some key differences include: Print statement: print 'Hello' (Python 2) vs. print(Hello) (Python 3) Integer division: 5/2 returns 2 (Python 2) vs. 2.5 (Python 3) Unicode: Unicode is the default for strings in Python 3"

               ]
